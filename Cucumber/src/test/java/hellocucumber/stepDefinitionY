package hellocucumber;

import io.cucumber.java.Before;
import io.cucumber.java.en.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.time.Duration;

public class StepDefinitionsT {
    private WebDriver driver;
    private WebDriverWait wait;

    @Before
    public void setUp() {

        // Set the path of the ChromeDriver executable
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\yuval\\IdeaProjects\\2025-mbt-j\\Selenium\\chromedriver.exe");

        // Create an instance of ChromeDriver and WebDriverWait
        driver = new ChromeDriver();
        wait = new WebDriverWait(driver, 15);
    }


    // $$*TODO* explain what this step does$$
    @Given("the Admin enters the login page")
    public void EnterLoginPage() {
        //opening the login page for the admin
        try {
            String BASE_ADDRESS = "http://localhost:8080/admina";
            driver.get(BASE_ADDRESS);
            driver.manage().window().maximize();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            driver.quit();
            throw e;
        }



    }

    // $$*TODO* explain what this step does$$
    @When("the Admin logs in with {string} and {string}")
    public void adminLoginWithEmailAndPassword(String email, String password) throws InterruptedException {
        String emailXpath = "//*[@id='email']";
        String passwordXpath = "//*[@id='passwd']";
        String submitButtonXpath = "//*[@id='submit_login']";
        try {
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(emailXpath))).sendKeys(email);
            Thread.sleep(500);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(passwordXpath))).sendKeys(password);
            Thread.sleep(500);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(submitButtonXpath))).click();
            Thread.sleep(2000);
        } catch (AssertionError | InterruptedException e) {
            System.out.println(e.getMessage());
            driver.quit();
            throw e;
        }


    }

    // $$*TODO* explain what this step does$$
    @And("navigates to the customers page")
    public void navigatesToCustomerPage() throws InterruptedException {
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//section[5]/ul[1]/li[1]/span[1]/a[1]"))).click();
        Thread.sleep(2000);
    }

    // $$TODO explain what this step does$$
    @And("deactivates the user with email {string}")
    public void deactivatesTheUserWithEmail(String email) throws InterruptedException {
        String email_search_field="//*[@id='customer_email']";
        String Button_search_field="//td[14]/button[1]";
        String disableCustomerCheckboxXpath = "//*[@id='input-false-admin_customers_toggle_status-2']";
        try{
            //look for Tommy's email
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(email_search_field))).clear();
            Thread.sleep(1000);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(email_search_field))).sendKeys(email);
            Thread.sleep(1000);
            //find the search button and click it
            WebElement searchButton = driver.findElement(By.xpath(Button_search_field));
            searchButton.getLocation();
            Thread.sleep(1500);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(Button_search_field))).click();
            Thread.sleep(1500);

            WebElement toggleOff = driver.findElement(By.xpath(disableCustomerCheckboxXpath));

            // Check if user is activated
            toggleOff.click();
            Thread.sleep(3000);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[1]/div[3]")));
            // Check if user was deactivated successfully

        } catch (AssertionError | InterruptedException e) {
            System.out.println(e.getMessage());
            driver.quit();
            throw e;
}}

    // $$*TODO* explain what this step does$$
    @Then("the user should be successfully deactivated")
    public void DeactivationHappened() {
        //driver.quit();
    }


}
